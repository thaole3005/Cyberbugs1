import React, {useState} from 'react';
import { Editor } from '@tinymce/tinymce-react';
import { Select, Slider  } from 'antd';

const { Option } = Select;

const children = [];
for (let i = 10; i < 36; i++) {
    children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);
}

export default function FormCreateTask() {

    const [timeTracking, setTimeTracking] = useState({
        timeTrackingSpent: 0,
        timeTrackingRemaining: 0,
    })


    const handleEditorChange = (content, editor) => {
        console.log("content", content);
        console.log("editor", editor);
    }
  

    const handleChange = (value) => {
        console.log(`selected ${value}`);
      }


    return (
        <div className = "container">
            <div className = "form-group">
                <p>Project</p>
                <select name = "projectId" className = "form-control">
                    <option value = "50">Project ABC</option>
                    <option value = "50">Project DEF</option>
                    <option value = "50">Project GHK</option>
                </select>
            </div>
            <div className="form-group">
                <p>Task type</p>
                <input className = "form-control" name = "typeId"/>
            </div>
            <div className = "form-group">
                <div className = "row">
                    <div className = "col-6">
                        <p>Priority</p>
                        <select name = "prioritytId" className = "form-control">
                            <option>High</option>
                            <option>Low</option>
                        </select>
                    </div>
                    <div className = "col-6">
                        <p>Task Type</p>
                        <select name = "typeId" className = "form-control">
                            <option>New Task</option>
                            <option>Bugs</option>
                        </select>
                    </div>
                </div>
            </div>
            <div className = "form-group">
                <div className = "form-group">
                    <div className = "row">
                        <div className = "col-6">
                            <p>Assign Members</p>
                            <Select

                                mode="multiple"
                                allowClear
                                style={{ width: '100%' }}
                                placeholder="Please select"
                                defaultValue={['a10', 'c12']}
                                options = {[{label: 'member1', value: 'thaole'}, {label: 'member2', value: 'nhi'}, {label: 'member3', value: 'hanh'}]}
                                onChange={handleChange}
                                >
                                {children}
                            </Select>
                            <div className="row mt-3">
                                <div className="col-12">
                                    <p>Original Estimate</p>
                                    <input className="form-control" type = "number" defaultValue = "0" min ="0" name = "originalEstimate"/>
                                </div>
                            </div>
                        </div>
                        <div className = "col-6">
                            <p>Time Tracking</p>
                            <Slider value = {Number(timeTracking.timeTrackingSpent)}
                                max = {Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />
                            
                            <div className="row">
                                <div className="col-6 text-left font-weight-bold">{timeTracking.timeTrackingSpent} h logged</div>
                                <div className="col-6 text-left font-weight-bold">{timeTracking.timeTrackingRemaining} h remaining</div>
                            </div>
                            
                            <div className = "row" style = {{marginTop: '5px'}}>
                                <div className = "col-6">
                                    <p className = "text-info">Time spent</p>
                                    <input type = "number" defaultValue = "0" min = "0" className="form-control" name = "timeTrackingSpent"
                                        onChange = {(e) => {
                                            setTimeTracking({
                                                ...timeTracking,
                                                timeTrackingSpent: e.target.value,
                                            })
                                        }}
                                    />
                                </div>
                                <div className = "col-6">
                                    <p className = "text-info">Time remaining</p>
                                    <input type = "number" defaultValue = "0" min = "0" className="form-control" name = "timeTrackingRemaining"
                                        onChange = {(e) => {
                                            setTimeTracking({
                                                ...timeTracking,
                                                timeTrackingRemaining: e.target.value,
                                            })
                                        }}
                                    />
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
            <div className="form-group">
                <p>Description</p>
                <Editor
                            name = "description"
                            initialValue="<p>This is the description of your project.</p>"
                            init={{
                            height: 500,
                            menubar: false,
                            plugins: [
                                'advlist autolink lists link image charmap print preview anchor',
                                'searchreplace visualblocks code fullscreen',
                                'insertdatetime media table paste code help wordcount'
                            ],
                            toolbar: 'undo redo | formatselect | ' +
                            'bold italic backcolor | alignleft aligncenter ' +
                            'alignright alignjustify | bullist numlist outdent indent | ' +
                             'removeformat | help',
                            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
                            }}
                            onEditorChange={handleEditorChange}
                />
            </div>
        </div>
    )
}
