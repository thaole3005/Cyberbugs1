import {GET_TASK_API} from '../constants/TodoListConstants';
import Axios from 'axios';
import  reduxThunk  from  'redux-thunk';





export const getTaskListApi = () => {
  console.log("hàm getTaskListApi")

  return dispatch => {
    let promise = Axios({
      url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',
      method: 'GET',
  });
  promise.then((response) => {
      //response.data ở đây chính là taskList lấy từ backend
      dispatch({
        type: GET_TASK_API,
        taskList: response.data,
      })
  });
  
  promise.catch((error) => {
      console.log("error", error);
  })
  }
}



export const addTaskApi = (taskName) => {
  return dispatch => {
    //xử lí trước khi dispatch trước reducer
    let promise = Axios({
      url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',
      method: 'POST',
      data: {taskName: taskName},  //gửi lên serve 1 task mới
  });
  promise.then((response) => {
      // console.log("response", response);
      //?sau khi đưa dữ liệu thành công lên serve thì dispatch lại hàm getTaskListApi để lấy đc danh sách mới nhất
      dispatch(getTaskListApi());
  })

  promise.catch((errors) => {
      alert(errors.response.data);     //task name is already exists!
  })
  }
}






export const addTaskDoneApi = (taskName) => {
    return dispatch => {
      let promise = Axios({
        url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,
        method: 'PUT',
    })

    promise.then((response) => {
        console.log("response", response);
        //sau khi thêm task thành công thì dispatch lại hàm getTaskListApi để load lại task
        dispatch(getTaskListApi());

    });

    promise.catch((errors) => {
        console.log(errors.response.data); 
    })
    }
}









export const deleteTaskApi = (taskName) => {
  return dispatch => {
    let promise = Axios({
      url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,
      method: 'DELETE',
  })

  promise.then((response) => {
      console.log("response", response);
      //sau khi delete task thành công ở server thì dispatch lại hàm getTaskListApi để load lại task
      dispatch(getTaskListApi());

  });

  promise.catch((errors) => {
      console.log(errors.response.data); 
  })
  }
}








export const rejectTaskApi = (taskName) => {
    return dispatch => {
      let promise = Axios({
        url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,
        method: 'PUT',
    })

    promise.then((response) => {
        console.log("response", response);
        //sau khi rejeect task thành công ở api thì dispatch lại hàm getTaskListApi để load lại task
        dispatch(getTaskListApi());

    });

    promise.catch((errors) => {
        console.log(errors.response.data); 
    })
    }
}

